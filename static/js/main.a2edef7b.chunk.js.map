{"version":3,"sources":["utils/firebase.js","components/SigninButton.js","pages/Login.js","store/Store.js","constants/Trading.js","components/BackupStock.js","components/table/TableItem.js","components/table/StockTable.js","components/AddStock.js","components/DeleteStock.js","pages/Main.js","components/LoadingTool.js","components/table/HistoryTable.js","components/RestoreStock.js","pages/Backup.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","Auth","Persistence","LOCAL","AuthProvider","google","get","GoogleAuthProvider","id","db","firestore","SigninButton","type","meta","background","color","title","titleShort","icon","github","facebook","providerMeta","className","style","backgroundColor","onClick","signInWithRedirect","then","result","catch","error","alert","alt","src","connect","state","store","history","setLoading","console","log","useEffect","authenticate","isAuth","push","signInWithEmailAndPassword","Store","createSlice","name","initialState","user","undefined","guestLock","reducers","login","action","payload","logout","configureStore","reducer","actions","Tradings","key","display","priority","useStyles","makeStyles","theme","paper","boxSizing","position","width","maxWidth","palette","borderRadius","boxShadow","shadows","padding","spacing","top","left","transform","formInput","marginBottom","BackupStock","swipeItem","onConfirm","onCancel","classes","useState","price","setPrice","val","quantity","exceed","empty","setQuantity","fontSize","margin","FormControl","variant","InputLabel","htmlFor","OutlinedInput","value","label","disabled","onChange","event","target","required","changed","Number","FormHelperText","DialogActions","Button","preventDefault","indate","sellquantity","sellprice","backupAll","TableItem","tradingKey","item","handleItemSelect","setSwipeItem","backupItem","setBackupItem","open","setOpen","isMounted","useRef","current","date","Date","setHours","diff","getTime","changeStyle","ddayState","displayDate","getMonth","getDate","getDateState","dbBackup","useCallback","rootRef","collection","doc","originRef","backupTradingRef","backupRef","trading","find","runTransaction","transaction","snapshot","data","set","exists","avePrice","update","outdate","valueOf","delete","getX","e","x","clientX","touches","screenX","toFixed","handleItemClick","Math","abs","startX","currentTarget","setAttribute","stopPropagation","handleSwipeStart","children","innerText","textContent","replace","getAttribute","dx","handleSwipeMove","leftonly","handleSwipeEnd","handleAnimationEnd","animationName","parentElement","handleBackupConfirm","backupInfo","handleBackupCancel","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUpCapture","onAnimationEnd","String","originaldate","Modal","onClose","React","memo","items","setItems","orderBy","onSnapshot","size","docs","map","selectEmpty","marginTop","formTrading","minWidth","selectedItem","sIndex","sName","sPrice","sQuantity","sDate","forEach","ind","tradingIndex","setTradingIndex","setName","setDate","isModified","Select","labelId","index","MenuItem","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","PopoverProps","anchorOrigin","vertical","horizontal","transformOrigin","dbRef","autoFocus","backup","fab","fabEdit","common","white","green","dispatch","doLogout","openDel","setOpenDel","tradings","setTradings","setSelectedItem","setTimeout","handleOpen","to","location","pathname","rel","split","signOut","Fab","LoadingTool","height","profit","profitRatio","profitColor","tradingRef","postTransaction","postSanpshot","originData","fill","openRestore","setOpenRestore","length","doLogin","loading","onAuthStateChanged","email","exact","path","render","props","component","window","href","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2edef7b.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDrC-Fz80eWezeDNlscZ_gB9QooILNuJ6k\",\r\n  authDomain: \"kistone-stock.firebaseapp.com\",\r\n  projectId: \"kistone-stock\",\r\n  storageBucket: \"kistone-stock.appspot.com\",\r\n  messagingSenderId: \"602515706055\",\r\n  appId: \"1:602515706055:web:271be76a0fdc249f6eeee2\",\r\n  measurementId: \"G-1CFXPBLJZE\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst Persistence = {\r\n  LOCAL: firebase.auth.Auth.Persistence.LOCAL,\r\n};\r\n\r\nconst AuthProvider = {\r\n  google: {\r\n    get: new firebase.auth.GoogleAuthProvider(),\r\n    id: \"google.com\",\r\n  },\r\n};\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\n\r\nexport { auth, Persistence, AuthProvider, db };\r\n","import React from \"react\";\r\nimport { auth, AuthProvider } from \"../utils/firebase\";\r\nimport \"./SigninButton.css\";\r\n\r\nfunction SigninButton({ type }) {\r\n  const typeMeta = {\r\n    google: {\r\n      background: \"#ffffff\",\r\n      color: \"#757575\",\r\n      title: \"Sign in with Google\",\r\n      titleShort: \"Google\",\r\n      icon: \"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg\",\r\n    },\r\n    github: {\r\n      background: \"#333333\",\r\n      title: \"Sign in with GitHub\",\r\n      titleShort: \"GitHub\",\r\n      icon: \"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/github.svg\",\r\n    },\r\n    facebook: {\r\n      background: \"#3b5998\",\r\n      title: \"Sign in with Facebook\",\r\n      titleShort: \"Facebook\",\r\n      icon: \"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/facebook.svg\",\r\n    },\r\n  };\r\n  const meta = typeMeta[type];\r\n  const providerMeta = AuthProvider[type];\r\n\r\n  const signInWithAnother = () => {\r\n    auth\r\n      .signInWithRedirect(providerMeta.get)\r\n      .then((result) => {})\r\n      .catch((error) => {\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"signinButton\">\r\n      <button\r\n        className=\"firebaseui-idp-button mdl-button mdl-js-button mdl-button--raised firebaseui-id-idp-button\"\r\n        data-provider-id={providerMeta.id}\r\n        style={{ backgroundColor: meta.background }}\r\n        data-upgraded=\",MaterialButton\"\r\n        onClick={signInWithAnother}\r\n      >\r\n        <span className=\"firebaseui-idp-icon-wrapper\">\r\n          <img className=\"firebaseui-idp-icon\" alt=\"\" src={meta.icon} />\r\n        </span>\r\n        <span\r\n          className=\"firebaseui-idp-text firebaseui-idp-text-long\"\r\n          style={{ color: meta.color }}\r\n        >\r\n          {meta.title}\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SigninButton;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SigninButton from \"../components/SigninButton\";\r\nimport { auth } from \"../utils/firebase\";\r\nimport \"./Login.css\";\r\n\r\nfunction Login({ history, store, setLoading }) {\r\n  console.log(\"Login START\");\r\n  useEffect(() => {\r\n    if (store.authenticate.isAuth) {\r\n      history.push(\"/main\");\r\n    }\r\n  }, [history, store.authenticate.isAuth]);\r\n\r\n  return (\r\n    <div className=\"login_main\">\r\n      <div className=\"title\">Stock Manager</div>\r\n      <div className=\"button\">\r\n        <SigninButton type=\"google\" />\r\n      </div>\r\n\r\n      <div\r\n        className=\"guest_button\"\r\n        onClick={() => {\r\n          setLoading(true);\r\n          auth.signInWithEmailAndPassword(\"guest@guest.com\", \"password\");\r\n        }}\r\n      >\r\n        Guest Login\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Login);\r\n","import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const Store = createSlice({\r\n  name: \"ReduxStore\",\r\n  initialState: {\r\n    authenticate: { user: undefined, isAuth: false },\r\n    guestLock: false,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      return { ...state, authenticate: action.payload };\r\n    },\r\n    logout: (state, action) => {\r\n      return { ...state, authenticate: { user: undefined, isAuth: false } };\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({ reducer: Store.reducer });\r\n\r\nexport const { login, logout } = Store.actions;\r\n\r\nexport default store;\r\n","export const Tradings = [\r\n  {\r\n    key: \"namuh\",\r\n    display: \"나무(NAMUH)\",\r\n    priority: 0,\r\n    color: \"#00a383\",\r\n  },\r\n  {\r\n    key: \"hankook\",\r\n    display: \"한국투자\",\r\n    priority: 1,\r\n    color: \"#104e81\",\r\n  },\r\n  {\r\n    key: \"mirae\",\r\n    display: \"미래에셋\",\r\n    priority: 2,\r\n    color: \"#e97f20\",\r\n  },\r\n  {\r\n    key: \"kb\",\r\n    display: \"KB증권\",\r\n    priority: 3,\r\n    color: \"#f2b200\",\r\n  },\r\n  {\r\n    key: \"shinhan\",\r\n    display: \"신한알파\",\r\n    priority: 4,\r\n    color: \"#2e62da\",\r\n  },\r\n  {\r\n    key: \"samsung\",\r\n    display: \"삼성증권\",\r\n    priority: 5,\r\n    color: \"#14279b\",\r\n  },\r\n  {\r\n    key: \"sk\",\r\n    display: \"SK증권\",\r\n    priority: 6,\r\n    color: \"#e31937\",\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  DialogActions,\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  makeStyles,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    boxSizing: \"border-box\",\r\n    position: \"absolute\",\r\n    width: \"80%\",\r\n    maxWidth: \"600px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: \"10px\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 2, 1),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    color: \"#000\",\r\n  },\r\n  formInput: {\r\n    width: \"100%\",\r\n    marginBottom: \"10px\",\r\n  },\r\n}));\r\n\r\nfunction BackupStock({ swipeItem, onConfirm, onCancel }) {\r\n  const classes = useStyles();\r\n  const [price, setPrice] = useState(swipeItem.price);\r\n  const [quantity, setQuantity] = useState({\r\n    val: swipeItem.quantity,\r\n    exceed: false,\r\n    empty: swipeItem.quantity === 0,\r\n  });\r\n\r\n  const handlePriceChange = (event) => {\r\n    setPrice(event.target.value);\r\n  };\r\n  const handleQuantityChange = (event) => {\r\n    const changed = event.target.value;\r\n    setQuantity({\r\n      val: changed,\r\n      exceed: Number(changed) > Number(swipeItem.quantity),\r\n      empty: Number(changed) === 0,\r\n    });\r\n  };\r\n  const handleBackupItem = (event) => {\r\n    event.preventDefault();\r\n    if (quantity.exceed || quantity.empty) {\r\n      return;\r\n    }\r\n    onConfirm({\r\n      key: swipeItem.key,\r\n      price: swipeItem.price,\r\n      quantity: swipeItem.quantity,\r\n      indate: swipeItem.indate,\r\n      sellquantity: Number(quantity.val),\r\n      sellprice: Number(price),\r\n      backupAll: swipeItem.quantity === Number(quantity.val),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <h3 style={{ fontSize: \"20px\", margin: \"0 0 20px\" }}>매매 정보</h3>\r\n      <form>\r\n        <FormControl variant=\"outlined\" className={classes.formInput}>\r\n          <InputLabel htmlFor=\"name-input\">종목명</InputLabel>\r\n          <OutlinedInput\r\n            id=\"name-input\"\r\n            value={swipeItem.key}\r\n            label=\"종목명\"\r\n            disabled={true}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formInput}>\r\n          <InputLabel htmlFor=\"price-input\">매매가</InputLabel>\r\n          <OutlinedInput\r\n            id=\"price-input\"\r\n            value={price}\r\n            onChange={handlePriceChange}\r\n            label=\"매매가\"\r\n            type=\"number\"\r\n            required={true}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formInput}>\r\n          <InputLabel\r\n            error={quantity.exceed || quantity.empty}\r\n            htmlFor=\"quantity-input\"\r\n          >\r\n            수량\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id=\"quantity-input\"\r\n            value={quantity.val}\r\n            onChange={handleQuantityChange}\r\n            label=\"수량\"\r\n            type=\"number\"\r\n            required={true}\r\n            error={quantity.exceed || quantity.empty}\r\n          />\r\n          {quantity.empty && (\r\n            <FormHelperText error id=\"accountId-error\">\r\n              매매수량을 입력해주세요.\r\n            </FormHelperText>\r\n          )}\r\n          {quantity.exceed && (\r\n            <FormHelperText error id=\"accountId-error\">\r\n              보유수량을 초과할 수 없습니다.\r\n            </FormHelperText>\r\n          )}\r\n        </FormControl>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={onCancel}>\r\n            취소\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleBackupItem} type=\"submit\">\r\n            확인\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackupStock;\r\n","import { Modal } from \"@material-ui/core\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Tradings } from \"../../constants/Trading\";\r\nimport { db } from \"../../utils/firebase\";\r\nimport BackupStock from \"../BackupStock\";\r\nimport \"./TableItem.css\";\r\n\r\nfunction TableItem({ tradingKey, item, handleItemSelect, store }) {\r\n  const { authenticate } = store;\r\n  const [swipeItem, setSwipeItem] = useState(null);\r\n  const [backupItem, setBackupItem] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const isMounted = useRef(false);\r\n\r\n  const getDateState = (item) => {\r\n    const date = new Date(item.indate);\r\n    date.setHours(9, 0, 0, 0);\r\n    const now = new Date();\r\n    const diff = (now.getTime() - date.getTime()) / (1000 * 3600 * 24);\r\n    let changeStyle = { color: \"gray\" };\r\n    let ddayState = 0;\r\n    if (diff >= 0 && diff < 1) {\r\n      changeStyle = { color: \"chartreuse\" };\r\n      ddayState = 1;\r\n    } else if (diff >= -2 && diff < 0) {\r\n      changeStyle = { color: \"red\" };\r\n      ddayState = 2;\r\n    } else if (diff < -2) {\r\n      changeStyle = { color: \"darkgreen\" };\r\n    }\r\n    const displayDate = date.getMonth() + 1 + \"/\" + date.getDate();\r\n\r\n    return { ddayState, changeStyle, displayDate };\r\n  };\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n  const { ddayState, changeStyle, displayDate } = getDateState(item);\r\n  const dbBackup = useCallback(() => {\r\n    if (!backupItem) {\r\n      return;\r\n    }\r\n    const rootRef = db.collection(\"user\").doc(authenticate.user);\r\n    const originRef = rootRef\r\n      .collection(\"trading\")\r\n      .doc(tradingKey)\r\n      .collection(\"items\")\r\n      .doc(backupItem.key);\r\n    const backupTradingRef = rootRef.collection(\"backup\").doc(tradingKey);\r\n    const backupRef = backupTradingRef.collection(\"items\").doc(backupItem.key);\r\n    const trading = Tradings.find((trading) => trading.key === tradingKey);\r\n    db.runTransaction((transaction) =>\r\n      transaction.get(backupRef).then((snapshot) => {\r\n        const data = snapshot.data();\r\n\r\n        // update backup db\r\n        transaction.set(backupTradingRef, {\r\n          display: trading.display,\r\n          priority: trading.priority,\r\n          color: trading.color,\r\n        });\r\n        if (snapshot.exists) {\r\n          const avePrice =\r\n            (data.sellprice * data.quantity +\r\n              backupItem.sellprice * backupItem.sellquantity) /\r\n            (data.quantity + backupItem.sellquantity);\r\n          transaction.update(backupRef, {\r\n            sellprice: avePrice,\r\n            quantity: data.quantity + backupItem.sellquantity,\r\n            outdate: new Date().valueOf(),\r\n          });\r\n        } else {\r\n          transaction.set(backupRef, {\r\n            name: backupItem.key,\r\n            price: backupItem.price,\r\n            sellprice: backupItem.sellprice,\r\n            quantity: backupItem.sellquantity,\r\n            indate: backupItem.indate,\r\n            outdate: new Date().valueOf(),\r\n          });\r\n        }\r\n\r\n        // update origianl db\r\n        if (backupItem.backupAll) {\r\n          transaction.delete(originRef);\r\n        } else {\r\n          transaction.update(originRef, {\r\n            quantity: backupItem.quantity - backupItem.sellquantity,\r\n          });\r\n        }\r\n      })\r\n    )\r\n      .then(() => {\r\n        console.log(\"Transaction successfully committed!\");\r\n        if (isMounted.current) {\r\n          setBackupItem(null);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Transaction failed: \", error);\r\n        if (isMounted.current) {\r\n          setBackupItem(null);\r\n        }\r\n      });\r\n  }, [tradingKey, authenticate, backupItem]);\r\n\r\n  const getX = (e) => {\r\n    var x = e.clientX;\r\n    if (!x) {\r\n      x = e.touches[0].screenX;\r\n    }\r\n    return Number(x.toFixed());\r\n  };\r\n\r\n  const handleItemClick = useCallback(\r\n    (e) => {\r\n      if (Math.abs(getX(e) - swipeItem?.startX) > 10) {\r\n        return;\r\n      }\r\n      e.currentTarget.setAttribute(\"class\", \"tr selected\");\r\n      handleItemSelect({\r\n        target: e.currentTarget,\r\n        tradingKey,\r\n      });\r\n      e.stopPropagation();\r\n    },\r\n    [tradingKey, handleItemSelect, swipeItem]\r\n  );\r\n  const handleSwipeStart = useCallback((e) => {\r\n    setSwipeItem({\r\n      target: e.currentTarget,\r\n      key: e.currentTarget.children[0].innerText,\r\n      price: Number(e.currentTarget.children[1].textContent.replace(\",\", \"\")),\r\n      quantity: Number(e.currentTarget.children[2].textContent),\r\n      indate: Number(e.currentTarget.children[3].getAttribute(\"originaldate\")),\r\n      startX: getX(e),\r\n      dx: getX(e),\r\n    });\r\n  }, []);\r\n  const handleSwipeMove = useCallback(\r\n    (e) => {\r\n      if (!swipeItem) {\r\n        return;\r\n      }\r\n      let dx = getX(e);\r\n      let leftonly = swipeItem.startX > dx ? dx : swipeItem.startX;\r\n      setSwipeItem({ ...swipeItem, dx: leftonly });\r\n    },\r\n    [swipeItem]\r\n  );\r\n  const handleSwipeEnd = useCallback(\r\n    (e) => {\r\n      if (!swipeItem) {\r\n        return;\r\n      }\r\n      if (swipeItem.startX - swipeItem.dx > 100) {\r\n        setOpen(true);\r\n      } else {\r\n        setSwipeItem(null);\r\n      }\r\n    },\r\n    [swipeItem]\r\n  );\r\n  const handleAnimationEnd = useCallback(\r\n    (e) => {\r\n      if (backupItem.backupAll && e.animationName === \"hiderow\") {\r\n        e.currentTarget.parentElement.setAttribute(\"style\", \"display: none\");\r\n        dbBackup();\r\n        setSwipeItem(null);\r\n      } else if (!backupItem.backupAll && e.animationName === \"swipeout\") {\r\n        e.currentTarget.setAttribute(\"class\", \"tr\");\r\n        dbBackup();\r\n        setSwipeItem(null);\r\n      }\r\n    },\r\n    [backupItem, dbBackup]\r\n  );\r\n\r\n  const handleBackupConfirm = useCallback(\r\n    (backupInfo) => {\r\n      setBackupItem(backupInfo);\r\n      setOpen(false);\r\n      if (swipeItem.quantity === backupInfo.quantity) {\r\n        swipeItem.target.setAttribute(\"class\", \"tr swipeouthide\");\r\n      } else {\r\n        swipeItem.target.setAttribute(\"class\", \"tr swipeout\");\r\n      }\r\n    },\r\n    [swipeItem]\r\n  );\r\n\r\n  const handleBackupCancel = useCallback(() => {\r\n    setOpen(false);\r\n    setSwipeItem(null);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tableitem\">\r\n      <div className=\"tr-bg\">보관</div>\r\n      <div\r\n        className=\"tr\"\r\n        onClick={handleItemClick}\r\n        onTouchStart={handleSwipeStart}\r\n        onTouchMove={handleSwipeMove}\r\n        onTouchEnd={handleSwipeEnd}\r\n        onMouseDown={handleSwipeStart}\r\n        onMouseMove={handleSwipeMove}\r\n        onMouseUpCapture={handleSwipeEnd}\r\n        onAnimationEnd={handleAnimationEnd}\r\n        style={\r\n          swipeItem?.key === item.name\r\n            ? {\r\n                left: `${swipeItem.dx - swipeItem.startX}px`,\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        <div className=\"item stock_name\">{item.name}</div>\r\n        <div className=\"item stock_price\">\r\n          {String(item.price).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n        </div>\r\n        <div className=\"item stock_quantity\">{item.quantity}</div>\r\n        <div\r\n          className=\"item stock_indate\"\r\n          style={changeStyle}\r\n          originaldate={item.indate}\r\n        >\r\n          <span className=\"main_text\">{displayDate}</span>\r\n          {ddayState > 0 && (\r\n            <span className=\"sub_text\" style={{ color: \"inherit\" }}>\r\n              {ddayState === 1 ? \"입고완료\" : \"입고예정\"}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"add-stock\"\r\n        aria-describedby=\"add-stock\"\r\n      >\r\n        <div>\r\n          <BackupStock\r\n            swipeItem={swipeItem}\r\n            onConfirm={handleBackupConfirm}\r\n            onCancel={handleBackupCancel}\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state };\r\n}\r\nexport default connect(mapStateToProps, null)(React.memo(TableItem));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { db } from \"../../utils/firebase\";\r\nimport \"./StockTable.css\";\r\nimport TableItem from \"./TableItem\";\r\n\r\nfunction StockTable({ trading, store, handleItemSelect }) {\r\n  const [items, setItems] = useState([]);\r\n\r\n  const { key: tradingKey, data } = trading;\r\n  const { color, display } = data;\r\n  const { authenticate } = store;\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db\r\n      .collection(\"user\")\r\n      .doc(authenticate.user)\r\n      .collection(\"trading\")\r\n      .doc(tradingKey)\r\n      .collection(\"items\")\r\n      .orderBy(\"indate\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        if (snapshot.size > 0) {\r\n          setItems(snapshot.docs.map((doc) => doc.data()));\r\n        } else {\r\n          db.collection(\"user\")\r\n            .doc(authenticate.user)\r\n            .collection(\"trading\")\r\n            .doc(tradingKey)\r\n            .delete();\r\n        }\r\n      });\r\n    return unsubscribe;\r\n  }, [authenticate, tradingKey]);\r\n  return (\r\n    <div className=\"stocktable\">\r\n      <div className=\"table_title\" style={{ color: color }}>\r\n        <strong>{display}</strong>\r\n      </div>\r\n      <div className=\"table\">\r\n        <div className=\"thead\">\r\n          <div className=\"tr\">\r\n            <div className=\"stock_name\">종목명</div>\r\n            <div className=\"stock_price\">단가</div>\r\n            <div className=\"stock_quantity\">수량</div>\r\n            <div className=\"stock_indate\">상장일</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"tbody\">\r\n          {items.map((item) => (\r\n            <TableItem\r\n              key={item.name}\r\n              tradingKey={tradingKey}\r\n              item={item}\r\n              handleItemSelect={handleItemSelect}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(StockTable);\r\n","import React, { useState } from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Button,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { db } from \"../utils/firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { Tradings } from \"../constants/Trading\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    boxSizing: \"border-box\",\r\n    position: \"absolute\",\r\n    width: \"80%\",\r\n    maxWidth: \"600px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: \"10px\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 2, 1),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  formTrading: {\r\n    minWidth: 120,\r\n  },\r\n  formInput: {\r\n    width: \"100%\",\r\n    marginBottom: \"10px\",\r\n  },\r\n}));\r\n\r\nfunction AddStock({ setOpen, store, selectedItem, handleItemSelect }) {\r\n  let sIndex = 0;\r\n  let sName = \"\";\r\n  let sPrice = \"\";\r\n  let sQuantity = \"\";\r\n  let sDate = new Date();\r\n  if (selectedItem) {\r\n    Tradings.forEach((trading, ind) => {\r\n      if (trading.key === selectedItem.tradingKey) {\r\n        sIndex = ind;\r\n      }\r\n    });\r\n    sName = selectedItem.target.children[0].textContent;\r\n    sPrice = selectedItem.target.children[1].textContent.replace(\",\", \"\");\r\n    sQuantity = selectedItem.target.children[2].textContent;\r\n    sDate = new Date(\r\n      Number(selectedItem.target.children[3].getAttribute(\"originaldate\"))\r\n    );\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [tradingIndex, setTradingIndex] = useState(sIndex);\r\n  const [name, setName] = useState(sName);\r\n  const [price, setPrice] = useState(sPrice);\r\n  const [quantity, setQuantity] = useState(sQuantity);\r\n  const [date, setDate] = useState(sDate);\r\n\r\n  const { authenticate } = store;\r\n  const isModified = selectedItem !== null;\r\n\r\n  const handleChangeTrading = (event) => {\r\n    setTradingIndex(event.target.value);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const handlePriceChange = (event) => {\r\n    setPrice(event.target.value);\r\n  };\r\n  const handleQuantityChange = (event) => {\r\n    setQuantity(event.target.value);\r\n  };\r\n  const handleDateChange = (date) => {\r\n    setDate(date);\r\n  };\r\n  const addItem = (event) => {\r\n    event.preventDefault();\r\n    if (store.guestLock && authenticate.user === \"guest@guest.com\") {\r\n      alert(\"please sign-in with private account\");\r\n      setOpen(false);\r\n      handleItemSelect(null);\r\n      return;\r\n    }\r\n    const trading = Tradings[tradingIndex];\r\n    const dbRef = db\r\n      .collection(\"user\")\r\n      .doc(authenticate.user)\r\n      .collection(\"trading\");\r\n    dbRef.doc(trading.key).set({\r\n      display: trading.display,\r\n      priority: trading.priority,\r\n      color: trading.color,\r\n    });\r\n    dbRef\r\n      .doc(trading.key)\r\n      .collection(\"items\")\r\n      .doc(name)\r\n      .set({\r\n        name: name,\r\n        price: Number(price),\r\n        quantity: Number(quantity),\r\n        indate: date.valueOf(),\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n    setOpen(false);\r\n    handleItemSelect(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <form>\r\n        <FormControl className={classes.formTrading}>\r\n          <InputLabel id=\"trading-select-label\">증권계좌</InputLabel>\r\n          <Select\r\n            labelId=\"trading-select-label\"\r\n            id=\"trading-select\"\r\n            value={tradingIndex}\r\n            onChange={handleChangeTrading}\r\n            className={classes.selectEmpty}\r\n            required={true}\r\n            disabled={isModified}\r\n          >\r\n            {Tradings.map((trading, index) => (\r\n              <MenuItem key={trading.key} value={index}>\r\n                {trading.display}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formInput}>\r\n          <InputLabel htmlFor=\"name-input\">종목명</InputLabel>\r\n          <OutlinedInput\r\n            id=\"name-input\"\r\n            value={name}\r\n            onChange={handleNameChange}\r\n            label=\"종목명\"\r\n            required={true}\r\n            disabled={isModified}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formInput}>\r\n          <InputLabel htmlFor=\"price-input\">단가</InputLabel>\r\n          <OutlinedInput\r\n            id=\"price-input\"\r\n            value={price}\r\n            onChange={handlePriceChange}\r\n            label=\"단가\"\r\n            type=\"number\"\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formInput}>\r\n          <InputLabel htmlFor=\"quantity-input\">수량</InputLabel>\r\n          <OutlinedInput\r\n            id=\"quantity-input\"\r\n            value={quantity}\r\n            onChange={handleQuantityChange}\r\n            label=\"수량\"\r\n            type=\"number\"\r\n          />\r\n        </FormControl>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"MM/dd/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"상장일(Month/Day/Year)\"\r\n            value={date}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n            PopoverProps={{\r\n              anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n              transformOrigin: { vertical: \"bottom\", horizontal: \"right\" },\r\n            }}\r\n            className={classes.formInput}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={() => setOpen(false)}>\r\n            취소\r\n          </Button>\r\n          <Button color=\"primary\" onClick={addItem} type=\"submit\" autoFocus>\r\n            {selectedItem ? \"수정\" : \"추가\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(AddStock);\r\n","import React from \"react\";\r\nimport { db } from \"../utils/firebase\";\r\nimport { Button, DialogActions, makeStyles } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    boxSizing: \"border-box\",\r\n    position: \"absolute\",\r\n    width: \"80%\",\r\n    maxWidth: \"600px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: \"10px\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 3, 1),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nfunction DeleteStock({\r\n  setOpen,\r\n  store,\r\n  selectedItem,\r\n  handleItemSelect,\r\n  backup,\r\n}) {\r\n  if (!selectedItem) {\r\n    setOpen(false);\r\n  }\r\n  const name = selectedItem?.target.children[0].innerText;\r\n\r\n  const classes = useStyles();\r\n  const { authenticate } = store;\r\n\r\n  const deleteItem = () => {\r\n    if (store.guestLock && authenticate.user === \"guest@guest.com\") {\r\n      alert(\"please sign-in with private account\");\r\n      setOpen(false);\r\n      handleItemSelect(null);\r\n      return;\r\n    }\r\n    db.collection(\"user\")\r\n      .doc(authenticate.user)\r\n      .collection(backup ? \"backup\" : \"trading\")\r\n      .doc(selectedItem.tradingKey)\r\n      .collection(\"items\")\r\n      .doc(name)\r\n      .delete()\r\n      .catch((error) => {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n    setOpen(false);\r\n    handleItemSelect(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <h3 id=\"simple-modal-title\">삭제</h3>\r\n      <div style={{ marginBottom: \"20px\" }}>삭제 하시겠습니까?</div>\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={() => setOpen(false)}>\r\n          취소\r\n        </Button>\r\n        <Button color=\"primary\" onClick={deleteItem} type=\"submit\" autoFocus>\r\n          삭제\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(DeleteStock);\r\n","import \"./Main.css\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../store/Store\";\r\nimport StockTable from \"../components/table/StockTable\";\r\nimport AddStock from \"../components/AddStock\";\r\nimport { auth, db } from \"../utils/firebase\";\r\n\r\nimport { Modal, Fab, makeStyles } from \"@material-ui/core\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport ExitToAppOutlinedIcon from \"@material-ui/icons/ExitToAppOutlined\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport DeleteStock from \"../components/DeleteStock\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {},\r\n  fabEdit: {\r\n    color: theme.palette.common.white,\r\n    backgroundColor: green[500],\r\n    \"&:hover\": {\r\n      backgroundColor: green[600],\r\n    },\r\n  },\r\n  icon: {\r\n    color: \"gray\",\r\n    fontSize: 30,\r\n    position: \"absolute\",\r\n    left: \"20px\",\r\n    top: \"50%\",\r\n    transform: \"translateY(-50%)\",\r\n  },\r\n}));\r\n\r\nfunction Main({ history, store, doLogout, setLoading }) {\r\n  const { authenticate } = store;\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [openDel, setOpenDel] = useState(false);\r\n  const [tradings, setTradings] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(undefined);\r\n  console.log(\"Main START\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"Main RENDERED\");\r\n    if (!authenticate.isAuth) {\r\n      console.log(\"Main goRoot!!\");\r\n      history.replace(\"/\");\r\n      return;\r\n    }\r\n\r\n    const unsubscribe = db\r\n      .collection(\"user\")\r\n      .doc(authenticate.user)\r\n      .collection(\"trading\")\r\n      .orderBy(\"priority\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 500);\r\n        setTradings(\r\n          snapshot.docs.map((doc) => ({\r\n            key: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n    return unsubscribe;\r\n  }, [authenticate, history, setLoading]);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpenDel = () => {\r\n    setOpenDel(true);\r\n  };\r\n  const handleCloseDel = () => {\r\n    setOpenDel(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    auth.signOut().then(() => {\r\n      doLogout(false);\r\n    });\r\n  };\r\n\r\n  const handleItemSelect = useCallback(\r\n    (item) => {\r\n      // clear history\r\n      selectedItem?.target.setAttribute(\"class\", \"tr\");\r\n      if (selectedItem?.target !== item?.target) {\r\n        setSelectedItem(item);\r\n      } else {\r\n        setSelectedItem(null);\r\n      }\r\n    },\r\n    [selectedItem]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <div className=\"header_main\">\r\n          <Link\r\n            to={(location) => {\r\n              return { ...location, pathname: \"/backup\" };\r\n            }}\r\n          >\r\n            <HistoryIcon className={classes.icon} />\r\n          </Link>\r\n          <Link to=\"/ipolist\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <div className=\"title\">\r\n              <span className=\"main-title\">Stock Manager</span>\r\n              <span className=\"sub-title\">\r\n                {\"@\" + authenticate.user?.split(\"@\")[0]}\r\n              </span>\r\n            </div>\r\n          </Link>\r\n          <div className=\"logout\" onClick={handleLogout}>\r\n            <span>Logout</span>\r\n            <ExitToAppOutlinedIcon />\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div\r\n        className=\"main\"\r\n        onClick={() => {\r\n          handleItemSelect(null);\r\n        }}\r\n      >\r\n        {tradings.map((trading) => (\r\n          <StockTable\r\n            key={trading.key}\r\n            trading={trading}\r\n            handleItemSelect={handleItemSelect}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div\r\n        className={\r\n          selectedItem\r\n            ? \"fab-area unselect fadeout\"\r\n            : \"fab-area unselect fadein\"\r\n        }\r\n      >\r\n        <Fab\r\n          className={classes.fab}\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          onClick={handleOpen}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n      {selectedItem !== undefined && (\r\n        <div\r\n          className={\r\n            selectedItem\r\n              ? \"fab-area select slidein\"\r\n              : \"fab-area select slideout\"\r\n          }\r\n        >\r\n          <Fab\r\n            className={classes.fabEdit}\r\n            color=\"secondary\"\r\n            aria-label=\"edit\"\r\n            onClick={handleOpen}\r\n          >\r\n            <EditIcon />\r\n          </Fab>\r\n          <Fab\r\n            className={classes.fab}\r\n            color=\"secondary\"\r\n            aria-label=\"delete\"\r\n            onClick={handleOpenDel}\r\n          >\r\n            <DeleteIcon />\r\n          </Fab>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"add-stock\"\r\n        aria-describedby=\"add-stock\"\r\n      >\r\n        <div>\r\n          <AddStock\r\n            setOpen={setOpen}\r\n            selectedItem={selectedItem}\r\n            handleItemSelect={handleItemSelect}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        open={openDel}\r\n        onClose={handleCloseDel}\r\n        aria-labelledby=\"del-stock\"\r\n        aria-describedby=\"del-stock\"\r\n      >\r\n        <div>\r\n          <DeleteStock\r\n            setOpen={setOpenDel}\r\n            selectedItem={selectedItem}\r\n            handleItemSelect={handleItemSelect}\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    doLogout: () => dispatch(logout()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport \"./LoadingTool.css\";\r\n\r\nfunction LoadingTool() {\r\n  return (\r\n    <div className=\"loading-area\">\r\n      <ReactLoading\r\n        type={\"spinningBubbles\"}\r\n        color={\"gray\"}\r\n        height={100}\r\n        width={100}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingTool;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { db } from \"../../utils/firebase\";\r\nimport \"./HistoryTable.css\";\r\n\r\nfunction HistoryTable({ trading, store, handleItemSelect }) {\r\n  const [items, setItems] = useState([]);\r\n  const { key: tradingKey, data } = trading;\r\n  const { color, display } = data;\r\n  const { authenticate } = store;\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db\r\n      .collection(\"user\")\r\n      .doc(authenticate.user)\r\n      .collection(\"backup\")\r\n      .doc(tradingKey)\r\n      .collection(\"items\")\r\n      .orderBy(\"outdate\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        if (snapshot.size > 0) {\r\n          setItems(snapshot.docs.map((doc) => doc.data()));\r\n        } else {\r\n          db.collection(\"user\")\r\n            .doc(authenticate.user)\r\n            .collection(\"backup\")\r\n            .doc(tradingKey)\r\n            .delete();\r\n        }\r\n      });\r\n    return unsubscribe;\r\n  }, [authenticate, tradingKey]);\r\n\r\n  const handleItemClick = useCallback(\r\n    (e) => {\r\n      e.currentTarget.setAttribute(\"class\", \"tr selected\");\r\n      handleItemSelect({\r\n        target: e.currentTarget,\r\n        tradingKey,\r\n      });\r\n      e.stopPropagation();\r\n    },\r\n    [tradingKey, handleItemSelect]\r\n  );\r\n  return (\r\n    <div className=\"historytable\">\r\n      <div className=\"table_title\" style={{ color: color }}>\r\n        <strong>{display}</strong>\r\n      </div>\r\n      <div className=\"table\">\r\n        <div className=\"thead\">\r\n          <div className=\"tr\">\r\n            <div className=\"head stock_name\">종목명</div>\r\n            <div className=\"head stock_profit\">\r\n              <span className=\"main_text\">평가손익</span>\r\n              <span className=\"sub_text\">손익률</span>\r\n            </div>\r\n            <div className=\"head stock_quantity\">수량</div>\r\n            <div className=\"head stock_price\">\r\n              <span className=\"main_text\">매매가</span>\r\n              <span className=\"sub_text\">매입가</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"tbody\">\r\n          {items.map((item) => {\r\n            const { sellprice, price, quantity } = item;\r\n            const profit = (sellprice - price) * quantity;\r\n            const profitRatio = ((sellprice - price) / price) * 100;\r\n            let profitColor = { color: \"white\" };\r\n            if (profit > 0) {\r\n              profitColor = { color: \"#d24f45\" };\r\n            } else {\r\n              profitColor = { color: \"#1261c4\" };\r\n            }\r\n            return (\r\n              <div className=\"tr\" onClick={handleItemClick} key={item.name}>\r\n                <div className=\"item stock_name\">{item.name}</div>\r\n                <div className=\"item stock_profit\" style={profitColor}>\r\n                  <span className=\"main_text\">\r\n                    {String(profit).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                  </span>\r\n                  <span className=\"sub_text\">\r\n                    {profitRatio.toFixed(2) + \" %\"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"item stock_quantity\">{quantity}</div>\r\n                <div className=\"item stock_price\">\r\n                  <span className=\"main_text\" style={profitColor}>\r\n                    {String(sellprice).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                  </span>\r\n                  <span className=\"sub_text\" style={{ color: \"gray\" }}>\r\n                    {String(price).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(HistoryTable);\r\n","import React from \"react\";\r\nimport { db } from \"../utils/firebase\";\r\nimport { Button, DialogActions, makeStyles } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Tradings } from \"../constants/Trading\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    boxSizing: \"border-box\",\r\n    position: \"absolute\",\r\n    width: \"80%\",\r\n    maxWidth: \"600px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: \"10px\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 3, 1),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nfunction RestoreStock({ setOpen, store, selectedItem, handleItemSelect }) {\r\n  if (!selectedItem) {\r\n    setOpen(false);\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const { authenticate } = store;\r\n\r\n  const restoreItem = () => {\r\n    if (store.guestLock && authenticate.user === \"guest@guest.com\") {\r\n      alert(\"please sign-in with private account\");\r\n      setOpen(false);\r\n      handleItemSelect(null);\r\n      return;\r\n    }\r\n\r\n    const tradingKey = selectedItem.tradingKey;\r\n    const name = selectedItem.target.children[0].textContent;\r\n    const rootRef = db.collection(\"user\").doc(authenticate.user);\r\n    const tradingRef = rootRef.collection(\"trading\").doc(tradingKey);\r\n    const originRef = tradingRef.collection(\"items\").doc(name);\r\n    const backupRef = rootRef\r\n      .collection(\"backup\")\r\n      .doc(tradingKey)\r\n      .collection(\"items\")\r\n      .doc(name);\r\n    const trading = Tradings.find((trading) => trading.key === tradingKey);\r\n\r\n    db.runTransaction((transaction) =>\r\n      transaction.get(backupRef).then((snapshot) => {\r\n        const data = snapshot.data();\r\n        transaction.delete(backupRef);\r\n        return data;\r\n      })\r\n    )\r\n      .then((data) => {\r\n        console.log(\"Transaction successfully committed!\");\r\n        db.runTransaction((postTransaction) =>\r\n          postTransaction.get(originRef).then((postSanpshot) => {\r\n            const originData = postSanpshot.data();\r\n\r\n            postTransaction.set(tradingRef, {\r\n              display: trading.display,\r\n              priority: trading.priority,\r\n              color: trading.color,\r\n            });\r\n            if (postSanpshot.exists) {\r\n              postTransaction.update(originRef, {\r\n                quantity: originData.quantity + data.quantity,\r\n              });\r\n            } else {\r\n              const { name, price, quantity, indate } = data;\r\n              postTransaction.set(originRef, {\r\n                name,\r\n                price,\r\n                quantity,\r\n                indate,\r\n              });\r\n            }\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Transaction failed: \", error);\r\n      });\r\n    setOpen(false);\r\n    handleItemSelect(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <h3 id=\"simple-modal-title\">복원</h3>\r\n      <div style={{ marginBottom: \"20px\" }}>복원 하시겠습니까?</div>\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={() => setOpen(false)}>\r\n          취소\r\n        </Button>\r\n        <Button color=\"primary\" onClick={restoreItem} type=\"submit\" autoFocus>\r\n          복원\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(RestoreStock);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport \"./Backup.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { db } from \"../utils/firebase\";\r\nimport HistoryTable from \"../components/table/HistoryTable\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport CloudOffSharpIcon from \"@material-ui/icons/CloudOffSharp\";\r\nimport RestoreFromTrashIcon from \"@material-ui/icons/RestoreFromTrash\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Fab, makeStyles, Modal } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DeleteStock from \"../components/DeleteStock\";\r\nimport RestoreStock from \"../components/RestoreStock\";\r\n\r\nconst useStyles = makeStyles({\r\n  fab: {},\r\n  icon: {\r\n    fontSize: 30,\r\n    position: \"absolute\",\r\n    left: \"20px\",\r\n    top: \"50%\",\r\n    transform: \"translateY(-50%)\",\r\n  },\r\n  empty: {\r\n    fill: \"gray\",\r\n    fontSize: 100,\r\n  },\r\n});\r\n\r\nfunction Backup({ history, store, setLoading }) {\r\n  const classes = useStyles();\r\n  const { authenticate } = store;\r\n\r\n  const [tradings, setTradings] = useState([]);\r\n  const [openRestore, setOpenRestore] = useState(false);\r\n  const [openDel, setOpenDel] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Backup RENDERED\");\r\n    if (!authenticate.isAuth) {\r\n      console.log(\"Backup goRoot!!\");\r\n      history.replace(\"/\");\r\n      return;\r\n    }\r\n\r\n    const unsubscribe = db\r\n      .collection(\"user\")\r\n      .doc(authenticate.user)\r\n      .collection(\"backup\")\r\n      .orderBy(\"priority\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        setLoading(false);\r\n        setTradings(\r\n          snapshot.docs.map((doc) => ({\r\n            key: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n    return unsubscribe;\r\n  }, [authenticate, history, setLoading]);\r\n\r\n  const handleOpenRestore = () => {\r\n    setOpenRestore(true);\r\n  };\r\n  const handleCloseRestore = () => {\r\n    setOpenRestore(false);\r\n  };\r\n  const handleOpenDel = () => {\r\n    setOpenDel(true);\r\n  };\r\n  const handleCloseDel = () => {\r\n    setOpenDel(false);\r\n  };\r\n  const handleItemSelect = useCallback(\r\n    (item) => {\r\n      // clear history\r\n      selectedItem?.target.setAttribute(\"class\", \"tr\");\r\n      if (selectedItem?.target !== item?.target) {\r\n        setSelectedItem(item);\r\n      } else {\r\n        setSelectedItem(null);\r\n      }\r\n    },\r\n    [selectedItem]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <div className=\"header_backup\">\r\n          <Link to=\"/main\">\r\n            <ArrowBackIosIcon className={classes.icon} />\r\n          </Link>\r\n          <div className=\"title\">\r\n            <span className=\"main-title\">매매손익</span>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div\r\n        className=\"backup\"\r\n        onClick={() => {\r\n          handleItemSelect(null);\r\n        }}\r\n      >\r\n        {tradings.length === 0 && (\r\n          <div className=\"backup-empty\">\r\n            <CloudOffSharpIcon className={classes.empty} />\r\n            <p>백업된 자료가 없습니다.</p>\r\n          </div>\r\n        )}\r\n        {tradings.map((trading) => (\r\n          <HistoryTable\r\n            key={trading.key}\r\n            trading={trading}\r\n            handleItemSelect={handleItemSelect}\r\n          />\r\n        ))}\r\n      </div>\r\n      {selectedItem !== undefined && (\r\n        <div\r\n          className={\r\n            selectedItem\r\n              ? \"fab-area select slidein\"\r\n              : \"fab-area select slideout\"\r\n          }\r\n        >\r\n          <Fab\r\n            className={classes.fab}\r\n            color=\"primary\"\r\n            aria-label=\"restore\"\r\n            onClick={handleOpenRestore}\r\n          >\r\n            <RestoreFromTrashIcon />\r\n          </Fab>\r\n          <Fab\r\n            className={classes.fab}\r\n            color=\"secondary\"\r\n            aria-label=\"delete\"\r\n            onClick={handleOpenDel}\r\n          >\r\n            <DeleteIcon />\r\n          </Fab>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={openRestore}\r\n        onClose={handleCloseRestore}\r\n        aria-labelledby=\"restore-stock\"\r\n        aria-describedby=\"restore-stock\"\r\n      >\r\n        <div>\r\n          <RestoreStock\r\n            setOpen={setOpenRestore}\r\n            selectedItem={selectedItem}\r\n            handleItemSelect={handleItemSelect}\r\n            backup\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        open={openDel}\r\n        onClose={handleCloseDel}\r\n        aria-labelledby=\"del-stock\"\r\n        aria-describedby=\"del-stock\"\r\n      >\r\n        <div>\r\n          <DeleteStock\r\n            setOpen={setOpenDel}\r\n            selectedItem={selectedItem}\r\n            handleItemSelect={handleItemSelect}\r\n            backup\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Backup);\r\n","import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Main from \"./pages/Main\";\nimport { login } from \"./store/Store\";\nimport { auth } from \"./utils/firebase\";\nimport LoadingTool from \"./components/LoadingTool\";\nimport Backup from \"./pages/Backup\";\n\nfunction App({ store, doLogin }) {\n  const { authenticate } = store;\n  const [loading, setLoading] = useState(true);\n  console.log(\"App START\", loading);\n\n  useEffect(() => {\n    console.log(\"App RENDERED\");\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      console.log(\"App onAuthStateChanged\", user);\n      if (user) {\n        doLogin(user.email);\n      } else {\n        setTimeout(() => {\n          setLoading(false);\n        }, 500);\n      }\n    });\n    return unsubscribe;\n  }, [doLogin]);\n\n  return (\n    <HashRouter>\n      {loading && <LoadingTool />}\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() =>\n            authenticate.isAuth ? (\n              <Redirect to=\"/main\" />\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          }\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={(props) => <Login {...props} setLoading={setLoading} />}\n        />\n        <Route\n          exact\n          path=\"/main\"\n          render={(props) => <Main {...props} setLoading={setLoading} />}\n        />\n        <Route\n          exact\n          path=\"/backup\"\n          render={(props) => <Backup {...props} setLoading={setLoading} />}\n        />\n        <Route\n          exact\n          path=\"/ipolist\"\n          component={() => {\n            window.location.href = \"http://sereon.synology.me:38888/po/IPOlist\";\n            return null;\n          }}\n        />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { store: state };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    doLogin: (user) => dispatch(login({ user: user, isAuth: true })),\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/Store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}