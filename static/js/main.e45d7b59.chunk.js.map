{"version":3,"sources":["pages/Login.js","components/StockTable.js","utils/firebase.js","components/AddStock.js","pages/Main.js","App.js","index.js"],"names":["Login","history","useHistory","style","textAlign","onClick","push","StockTable","dbRef","tradingKey","display","useState","items","setItems","useEffect","doc","collection","onSnapshot","snapshot","docs","map","data","className","item","date","Date","indate","name","String","price","replace","quantity","getMonth","getDate","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","Auth","Persistence","LOCAL","GoogleAuthProvider","db","firestore","tradings","key","priority","useStyles","makeStyles","theme","paper","boxSizing","position","width","maxWidth","backgroundColor","palette","background","borderRadius","boxShadow","shadows","padding","spacing","top","left","transform","selectEmpty","marginTop","marginBottom","formTrading","minWidth","formInput","AddStock","setOpen","classes","tradingIndex","setTradingIndex","setName","setPrice","setQuantity","setDate","FormControl","InputLabel","id","Select","labelId","value","onChange","event","target","required","trading","index","MenuItem","variant","htmlFor","OutlinedInput","label","type","utils","DateFnsUtils","disableToolbar","format","margin","KeyboardButtonProps","PopoverProps","anchorOrigin","vertical","horizontal","transformOrigin","DialogActions","Button","color","preventDefault","set","toDateString","autoFocus","fav","bottom","Main","open","setTradings","orderBy","Fab","Modal","onClose","App","exact","path","render","to","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"oQAeeA,MAZf,WACE,IAAMC,EAAUC,cAIhB,OACE,qBAAKC,MAAO,CAAEC,UAAW,UAAzB,SACE,wBAAQC,QALS,WACnBJ,EAAQK,KAAK,UAIX,sB,2DCNS,SAASC,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,QAMtD,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OATAC,qBAAU,WACRN,EACGO,IAAIN,GACJO,WAAW,SACXC,YAAW,SAACC,GACXL,EAASK,EAASC,KAAKC,KAAI,SAACL,GAAD,OAASA,EAAIM,gBAE3C,IAGD,sBAAKC,UAAU,aAAf,UACE,qBAAKA,UAAU,cAAf,SACE,iCAASZ,MAEX,kCACE,gCACE,+BACE,oDACA,8CACA,8CACA,yDAGJ,gCACGE,EAAMQ,KAAI,SAACG,GACV,IAAMC,EAAO,IAAIC,KAAKF,EAAKG,QAC3B,OACE,+BACE,oBAAIJ,UAAU,YAAd,SAA2BC,EAAKI,OAChC,oBAAIL,UAAU,aAAd,SACGM,OAAOL,EAAKM,OAAOC,QAAQ,wBAAyB,OAEvD,oBAAIR,UAAU,gBAAd,SAA+BC,EAAKQ,WACpC,oBAAIT,UAAU,YAAd,SACGE,EAAKQ,WAAa,EAAI,IAAMR,EAAKS,cAP7BV,EAAKI,iB,yHCxB5BO,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMRR,IAASS,KAAKC,KAAKC,YAAYC,MAK/B,IAAIZ,IAASS,KAAKI,mBAKdb,IAASS,OAXtB,IAYMK,EAAKd,IAASe,YCVdC,EAAW,CACf,CACEC,IAAK,OACLzC,QAAS,qBACT0C,SAAU,GAEZ,CACED,IAAK,UACLzC,QAAS,2BACT0C,SAAU,GAEZ,CACED,IAAK,QACLzC,QAAS,2BACT0C,SAAU,GAEZ,CACED,IAAK,KACLzC,QAAS,iBACT0C,SAAU,GAEZ,CACED,IAAK,UACLzC,QAAS,2BACT0C,SAAU,GAEZ,CACED,IAAK,UACLzC,QAAS,2BACT0C,SAAU,IAIRC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAW,aACXC,SAAU,WACVC,MAAO,MACPC,SAAU,QACVC,gBAAiBN,EAAMO,QAAQC,WAAWP,MAC1CQ,aAAc,OACdC,UAAWV,EAAMW,QAAQ,GACzBC,QAASZ,EAAMa,QAAQ,EAAG,EAAG,GAC7BC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAEbC,YAAa,CACXC,UAAWlB,EAAMa,QAAQ,GACzBM,aAAcnB,EAAMa,QAAQ,IAE9BO,YAAa,CACXC,SAAU,KAEZC,UAAW,CACTlB,MAAO,OACPe,aAAc,YAiIHI,MA7Hf,YAAgC,IAAZC,EAAW,EAAXA,QACZC,EAAU3B,IAChB,EAAwC1C,mBAAS,GAAjD,mBAAOsE,EAAP,KAAqBC,EAArB,KACA,EAAwBvE,mBAAS,IAAjC,mBAAOgB,EAAP,KAAawD,EAAb,KACA,EAA0BxE,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcuD,EAAd,KACA,EAAgCzE,mBAAS,IAAzC,mBAAOoB,EAAP,KAAiBsD,EAAjB,KACA,EAAwB1E,mBAAS,IAAIc,MAArC,mBAAOD,EAAP,KAAa8D,EAAb,KAmCA,OACE,qBAAKhE,UAAW0D,EAAQxB,MAAxB,SACE,iCACE,eAAC+B,EAAA,EAAD,CAAajE,UAAW0D,EAAQL,YAAhC,UACE,cAACa,EAAA,EAAD,CAAYC,GAAG,uBAAf,sCACA,cAACC,EAAA,EAAD,CACEC,QAAQ,uBACRF,GAAG,iBACHG,MAAOX,EACPY,SA1CkB,SAACC,GAC3BZ,EAAgBY,EAAMC,OAAOH,QA0CrBtE,UAAW0D,EAAQR,YACnBwB,UAAU,EANZ,SAQG9C,EAAS9B,KAAI,SAAC6E,EAASC,GAAV,OACZ,cAACC,EAAA,EAAD,CAA4BP,MAAOM,EAAnC,SACGD,EAAQvF,SADIuF,EAAQ9C,aAM7B,eAACoC,EAAA,EAAD,CAAaa,QAAQ,WAAW9E,UAAW0D,EAAQH,UAAnD,UACE,cAACW,EAAA,EAAD,CAAYa,QAAQ,aAApB,gCACA,cAACC,EAAA,EAAD,CACEb,GAAG,aACHG,MAAOjE,EACPkE,SAtDe,SAACC,GACxBX,EAAQW,EAAMC,OAAOH,QAsDbW,MAAM,OACNP,UAAU,OAGd,eAACT,EAAA,EAAD,CAAaa,QAAQ,WAAW9E,UAAW0D,EAAQH,UAAnD,UACE,cAACW,EAAA,EAAD,CAAYa,QAAQ,cAApB,0BACA,cAACC,EAAA,EAAD,CACEb,GAAG,cACHG,MAAO/D,EACPgE,SA7DgB,SAACC,GACzBV,EAASU,EAAMC,OAAOH,QA6DdW,MAAM,QACNC,KAAK,SACLR,UAAU,OAGd,eAACT,EAAA,EAAD,CAAaa,QAAQ,WAAW9E,UAAW0D,EAAQH,UAAnD,UACE,cAACW,EAAA,EAAD,CAAYa,QAAQ,iBAApB,0BACA,cAACC,EAAA,EAAD,CACEb,GAAG,iBACHG,MAAO7D,EACP8D,SArEmB,SAACC,GAC5BT,EAAYS,EAAMC,OAAOH,QAqEjBW,MAAM,WACNC,KAAK,cAGT,cAAC,IAAD,CAAyBC,MAAOC,IAAhC,SACE,cAAC,IAAD,CACEC,gBAAc,EACdP,QAAQ,SACRQ,OAAO,aACPC,OAAO,SACPpB,GAAG,qBACHc,MAAM,iBACNX,MAAOpE,EACPqE,SAhFe,SAACrE,GACxB8D,EAAQ9D,IAgFAsF,oBAAqB,CACnB,aAAc,eAEhBC,aAAc,CACZC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,gBAAiB,CAAEF,SAAU,SAAUC,WAAY,UAErD5F,UAAW0D,EAAQH,cAGvB,eAACuC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUjH,QAAS,kBAAM0E,GAAQ,IAA/C,0BAGA,cAACsC,EAAA,EAAD,CAAQC,MAAM,UAAUjH,QA5FhB,SAACyF,GACfA,EAAMyB,iBACN,IAAMtB,EAAU/C,EAAS+B,GACnBzE,EAAQwC,EAAGhC,WAAW,QAAQD,IAAI,cAAcC,WAAW,WACjER,EAAMO,IAAIkF,EAAQ9C,KAAKqE,IAAI,CACzB9G,QAASuF,EAAQvF,QACjB0C,SAAU6C,EAAQ7C,WAEpB5C,EAAMO,IAAIkF,EAAQ9C,KAAKnC,WAAW,SAASD,IAAIY,GAAM6F,IAAI,CACvD7F,KAAMA,EACNE,MAAOA,EACPE,SAAUA,EACVL,OAAQF,EAAKiG,iBAEf1C,GAAQ,IA8EwCyB,KAAK,SAASkB,WAAS,EAAjE,mCC1LJrE,EAAYC,aAAW,iBAAO,CAClCqE,IAAK,CACHjE,SAAU,QACVkE,OAAQ,EACRtD,KAAM,MACNC,UAAW,mBACXG,aAAc,YA4DHmD,MAxDf,WACE,IAAM7C,EAAU3B,IAChB,EAAwB1C,oBAAS,GAAjC,mBAAOmH,EAAP,KAAa/C,EAAb,KACA,EAAgCpE,mBAAS,IAAzC,mBAAOuC,EAAP,KAAiB6E,EAAjB,KAEMvH,EAAQwC,EAAGhC,WAAW,QAAQD,IAAI,cAAcC,WAAW,WAsBjE,OArBAF,qBAAU,WAWR,OAVoBN,EACjBwH,QAAQ,WAAY,OACpB/G,YAAW,SAACC,GACX6G,EACE7G,EAASC,KAAKC,KAAI,SAACL,GAAD,MAAU,CAC1BoC,IAAKpC,EAAI0E,GACT/E,QAASK,EAAIM,OAAOX,kBAK3B,IAUD,qCACE,qBAAKY,UAAU,OAAf,SACG4B,EAAS9B,KAAI,gBAAG+B,EAAH,EAAGA,IAAKzC,EAAR,EAAQA,QAAR,OACZ,cAAC,EAAD,CAAYF,MAAOA,EAAOC,WAAY0C,EAAKzC,QAASA,SAGxD,cAACuH,EAAA,EAAD,CACE3G,UAAW0D,EAAQ2C,IACnBL,MAAM,UACN,aAAW,MACXjH,QAlBa,WACjB0E,GAAQ,IAaN,SAME,cAAC,IAAD,MAEF,cAACmD,EAAA,EAAD,CACEJ,KAAMA,EACNK,QApBc,WAClBpD,GAAQ,IAoBJ,kBAAgB,YAChB,mBAAiB,YAJnB,SAME,8BACE,cAAC,EAAD,CAAUA,QAASA,YCnDdqD,MAZf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAG,cACjD,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASG,UAAWzI,IACtC,cAAC,IAAD,CAAOqI,OAAK,EAACC,KAAK,QAAQG,UAAWZ,UCL7Ca,IAASH,OACP,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e45d7b59.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const onClickLogin = () => {\r\n    history.push(\"/main\");\r\n  };\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <button onClick={onClickLogin}>Login</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\n// import useLongPress from \"../utils/useLongPress\";\r\nimport \"./StockTable.css\";\r\n\r\nexport default function StockTable({ dbRef, tradingKey, display }) {\r\n  //const { trading, items } = data;\r\n  //const past = new Date(2021, 5, 11);\r\n  //const now = new Date();\r\n  //const diff = now.getTime() - past.getTime();\r\n  //console.log(diff / (1000 * 3600 * 24));\r\n  const [items, setItems] = useState([]);\r\n  useEffect(() => {\r\n    dbRef\r\n      .doc(tradingKey)\r\n      .collection(\"items\")\r\n      .onSnapshot((snapshot) => {\r\n        setItems(snapshot.docs.map((doc) => doc.data()));\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"stocktable\">\r\n      <div className=\"table_title\">\r\n        <strong>{display}</strong>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>종목명</th>\r\n            <th>단가</th>\r\n            <th>수량</th>\r\n            <th>입고일</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map((item) => {\r\n            const date = new Date(item.indate);\r\n            return (\r\n              <tr key={item.name}>\r\n                <td className=\"item_name\">{item.name}</td>\r\n                <td className=\"item_price\">\r\n                  {String(item.price).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                </td>\r\n                <td className=\"item_quantity\">{item.quantity}</td>\r\n                <td className=\"item_date\">\r\n                  {date.getMonth() + 1 + \"/\" + date.getDate()}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDrC-Fz80eWezeDNlscZ_gB9QooILNuJ6k\",\r\n  authDomain: \"kistone-stock.firebaseapp.com\",\r\n  projectId: \"kistone-stock\",\r\n  storageBucket: \"kistone-stock.appspot.com\",\r\n  messagingSenderId: \"602515706055\",\r\n  appId: \"1:602515706055:web:271be76a0fdc249f6eeee2\",\r\n  measurementId: \"G-1CFXPBLJZE\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst Persistence = {\r\n  LOCAL: firebase.auth.Auth.Persistence.LOCAL,\r\n};\r\n\r\nconst AuthProvider = {\r\n  google: {\r\n    get: new firebase.auth.GoogleAuthProvider(),\r\n    id: \"google.com\",\r\n  },\r\n};\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\n\r\nexport { auth, Persistence, AuthProvider, db };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Button,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { db } from \"../utils/firebase\";\r\n\r\nconst tradings = [\r\n  {\r\n    key: \"namu\",\r\n    display: \"나무(NAMU)\",\r\n    priority: 0,\r\n  },\r\n  {\r\n    key: \"hankook\",\r\n    display: \"한국투자\",\r\n    priority: 1,\r\n  },\r\n  {\r\n    key: \"mirae\",\r\n    display: \"미래에셋\",\r\n    priority: 2,\r\n  },\r\n  {\r\n    key: \"kb\",\r\n    display: \"KB증권\",\r\n    priority: 3,\r\n  },\r\n  {\r\n    key: \"shinhan\",\r\n    display: \"신한알파\",\r\n    priority: 4,\r\n  },\r\n  {\r\n    key: \"samsung\",\r\n    display: \"삼성증권\",\r\n    priority: 5,\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    boxSizing: \"border-box\",\r\n    position: \"absolute\",\r\n    width: \"80%\",\r\n    maxWidth: \"600px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: \"10px\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 2, 1),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  formTrading: {\r\n    minWidth: 120,\r\n  },\r\n  formInput: {\r\n    width: \"100%\",\r\n    marginBottom: \"10px\",\r\n  },\r\n}));\r\n\r\nfunction AddStock({ setOpen }) {\r\n  const classes = useStyles();\r\n  const [tradingIndex, setTradingIndex] = useState(0);\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const handleChangeTrading = (event) => {\r\n    setTradingIndex(event.target.value);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const handlePriceChange = (event) => {\r\n    setPrice(event.target.value);\r\n  };\r\n  const handleQuantityChange = (event) => {\r\n    setQuantity(event.target.value);\r\n  };\r\n  const handleDateChange = (date) => {\r\n    setDate(date);\r\n  };\r\n  const addItem = (event) => {\r\n    event.preventDefault();\r\n    const trading = tradings[tradingIndex];\r\n    const dbRef = db.collection(\"user\").doc(\"kisskwon87\").collection(\"trading\");\r\n    dbRef.doc(trading.key).set({\r\n      display: trading.display,\r\n      priority: trading.priority,\r\n    });\r\n    dbRef.doc(trading.key).collection(\"items\").doc(name).set({\r\n      name: name,\r\n      price: price,\r\n      quantity: quantity,\r\n      indate: date.toDateString(),\r\n    });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <form>\r\n        <FormControl className={classes.formTrading}>\r\n          <InputLabel id=\"trading-select-label\">증권계좌</InputLabel>\r\n          <Select\r\n            labelId=\"trading-select-label\"\r\n            id=\"trading-select\"\r\n            value={tradingIndex}\r\n            onChange={handleChangeTrading}\r\n            className={classes.selectEmpty}\r\n            required={true}\r\n          >\r\n            {tradings.map((trading, index) => (\r\n              <MenuItem key={trading.key} value={index}>\r\n                {trading.display}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formInput}>\r\n          <InputLabel htmlFor=\"name-input\">종목명</InputLabel>\r\n          <OutlinedInput\r\n            id=\"name-input\"\r\n            value={name}\r\n            onChange={handleNameChange}\r\n            label=\"Name\"\r\n            required={true}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formInput}>\r\n          <InputLabel htmlFor=\"price-input\">단가</InputLabel>\r\n          <OutlinedInput\r\n            id=\"price-input\"\r\n            value={price}\r\n            onChange={handlePriceChange}\r\n            label=\"Price\"\r\n            type=\"number\"\r\n            required={true}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formInput}>\r\n          <InputLabel htmlFor=\"quantity-input\">수량</InputLabel>\r\n          <OutlinedInput\r\n            id=\"quantity-input\"\r\n            value={quantity}\r\n            onChange={handleQuantityChange}\r\n            label=\"Quantity\"\r\n            type=\"number\"\r\n          />\r\n        </FormControl>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"MM/dd/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"Month/Day/Year\"\r\n            value={date}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n            PopoverProps={{\r\n              anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\r\n              transformOrigin: { vertical: \"bottom\", horizontal: \"right\" },\r\n            }}\r\n            className={classes.formInput}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={() => setOpen(false)}>\r\n            취소\r\n          </Button>\r\n          <Button color=\"primary\" onClick={addItem} type=\"submit\" autoFocus>\r\n            추가\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddStock;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Fab, makeStyles } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport StockTable from \"../components/StockTable\";\r\nimport \"./Main.css\";\r\nimport AddStock from \"../components/AddStock\";\r\nimport { db } from \"../utils/firebase\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  fav: {\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    marginBottom: \"30px\",\r\n  },\r\n}));\r\n\r\nfunction Main() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [tradings, setTradings] = useState([]);\r\n\r\n  const dbRef = db.collection(\"user\").doc(\"kisskwon87\").collection(\"trading\");\r\n  useEffect(() => {\r\n    const unsubscribe = dbRef\r\n      .orderBy(\"priority\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        setTradings(\r\n          snapshot.docs.map((doc) => ({\r\n            key: doc.id,\r\n            display: doc.data().display,\r\n          }))\r\n        );\r\n      });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        {tradings.map(({ key, display }) => (\r\n          <StockTable dbRef={dbRef} tradingKey={key} display={display} />\r\n        ))}\r\n      </div>\r\n      <Fab\r\n        className={classes.fav}\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        onClick={handleOpen}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"add-stock\"\r\n        aria-describedby=\"add-stock\"\r\n      >\r\n        <div>\r\n          <AddStock setOpen={setOpen} />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Main from \"./pages/Main\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/main\" component={Main} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}